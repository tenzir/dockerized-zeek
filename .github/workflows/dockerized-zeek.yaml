name: Dockerized Zeek
on:
  push:
    branches:
      - master
  pull_request:

env:
  DEBIAN_FRONTEND: noninteractive
  DOCKER_BUILDKIT: 1

jobs:
  cancel-previous-runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        if: github.event_name == 'pull_request'
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

  build:
    name: Build Zeek ${{ matrix.build.version }}
    runs-on: ubuntu-latest
    needs:
      - cancel-previous-runs
    strategy:
      fail-fast: false
      matrix:
        build:
          - version: 5.1.1-0
            name: zeek
            lts: false
            tags:
              - ${{ github.sha }}
              - latest
              - '5'
              - '5.1'
              - '5.1.1'
          - version: 5.0.4-0
            name: zeek
            lts: true
            tags:
              - lts
              - '5.0'
              - '5.0.4'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker Image
        run: |
          sudo apt-get -y update
          sudo apt-get -y install linux-headers-$(uname -r)
          docker build \
            --platform linux/amd64 \
            --tag tenzir/${{ matrix.build.name }}:${{ join(matrix.build.tags, format(' --tag tenzir/{0}:',  matrix.build.name)) }} \
            --build-arg "ZEEK_VERSION=${{ matrix.build.version }}" \
            --build-arg "ZEEK_LTS=${{ matrix.build.lts && '1' || '' }}" \
            .
      - name: Save Docker Image
        if: github.event_name == 'push'
        run: |
          docker images 'tenzir/*'
          docker save $(docker images --format '{{.Repository}}:{{.Tag}}' 'tenzir/*') \
            > ${{ matrix.build.name }}@${{ matrix.build.version }}.tar
      - name: Upload Docker Image
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.build.name }}@${{ matrix.build.version }}
          path: ${{ matrix.build.name }}@${{ matrix.build.version }}.tar

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs:
      - build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: tenzir
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Download Docker Images
        uses: actions/download-artifact@v2
        with:
          path: images
      - name: Publish Docker Images
        working-directory: images
        run: |
          # Tree for debug purposes if we have it.
          tree || true
          tags=()
          for name in $(ls); do
            docker load < "${name}/${name}.tar"
            tags+=("tenzir/$(echo "${name}" | cut -d'@' -f1)")
          done
          docker images
          eval tags=($(printf "%q\n" "${tags[@]}" | sort -u))
          for tag in "${tags[@]}"; do
            echo "pushing all tags for ${tag}"
            docker push --all-tags "${tag}"
          done
